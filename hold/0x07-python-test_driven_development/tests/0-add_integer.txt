============================
The ``0-add_integer`` module
============================

This module defines an integer addition function ``add_integer``.

=====================
Using ``add_integer``
=====================

``add_integer`` returns the addition of two integers. This is equivalent to
using the ``+`` operator.

::

First import ``add_integer`` from the ``0-add_integer`` module.
>>> add_integer = __import__('0-add_integer').add_integer

::

The function works with two integers.

>>> add_integer(2, 3)
5

::

b defaults to 98 if not passed

>>> add_integer(2)
100

::

Works with negative numbers

>>> add_integer(-2, 3)
1

::

Floats are cast as integers

>>> add_integer(1, 2.5)
3

Non-numbers
===========

Raises a TypeError if a is not a float or integer.
>>> add_integer('2', 3)
Traceback (most recent call last):
...
TypeError: a must be an integer

::

Raises a TypeError if b is not a float or integer.

>>> add_integer(2, '3')
Traceback (most recent call last):
...
TypeError: b must be an integer

::

Raises an OverflowError if add_integer is called with inf (infinity)

>>> from math import inf
>>> add_integer(2, inf)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

::

Raises ValueError when NaN is passed
>>> add_integer(2, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
